
           Паттерн "Цепочка обязанностей":
           Цель: Связать объектов-обработчиков в цепочку и передачу запросов по ней.

           Реализация паттерна "Цепочка обязанностей":
            1) Создать абстрактный базовый класс обработчиков,
               чтобы не дублировать реализацию метода получения следующего обработчика во всех конкретных обработчиках.
               1.1) Добавить в базовый обработчик поле для хранения ссылки на следующий объект цепочки.
               1.2) Устанавливать начальное значение этого поля через конструктор.
               1.3) Реализовать базовый метод обработки так, чтобы он перенаправлял запрос
                    следующему объекту, проверив его наличие.
            2) Один за другим создайте классы конкретных обработчиков и реализуйте в них методы обработки запросов.
               При получении запроса каждый обработчик должен решить:
               2.1) Может ли он обработать запрос или нет?
               2.2) Следует ли передать запрос следующему обработчику или нет?
            3) Клиент может собирать цепочку обработчиков самостоятельно,
               опираясь на свою бизнес-логику, либо получать уже готовые цепочки извне.
            4) Клиент может посылать запросы любому обработчику в цепи, а не только первому.

           Применимость:
            1) Когда программа должна обрабатывать разнообразные запросы несколькими способами,
               но заранее неизвестно, какие конкретно запросы будут приходить
               и какие обработчики для них понадобятся
            2) Когда важно, чтобы обработчики выполнялись один за другим в строгом порядке.
            3) Когда набор объектов, способных обработать запрос, должен задаваться динамически.
