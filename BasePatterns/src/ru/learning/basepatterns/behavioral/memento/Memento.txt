
           Паттерн "Хранитель":
           Цель: Сохранение внутреннего состояние объекта за его пределами.

           Реализация паттерна "Хранитель":
            1) Определить класс создателя, объекты которого должны создавать снимки своего состояния.
            2) Создать класс снимка и описать в нём все те же поля,
               которые имеются в оригинальном классе-создателе.
            3) Сделать объекты снимков неизменяемыми. Они должны получать начальные значения
               только один раз, через свой конструктор.
            4) Добавить в класс создателя метод получения снимков.
               Создатель должен создавать новые объекты снимков, передавая значения
               своих полей через конструктор.
            5) Добавить в класс создателя метод восстановления из снимка.
               Что касается привязки к типам, руководствоваться той же логикой, что и в пункте 4.
            6) Опекуны, будь то история операций, объекты команд или нечто иное, должны знать о том,
               когда запрашивать снимки у создателя, где их хранить и когда восстанавливать.
            7) Связь опекунов с создателями можно перенести внутрь снимков. В этом случае каждый снимок
               будет привязан к своему создателю и должен будет сам восстанавливать его состояние.
               Но это будет работать либо если классы снимков вложены в классы создателей,
               либо если создатели имеют соответствующие сеттеры для установки значений своих полей.

           Применимость:
            1) Когда нужно сохранять мгновенные снимки состояния объекта (или его части),
               чтобы впоследствии объект можно было восстановить в том же состоянии.
               1.1) Паттерн Хранитель позволяет создавать любое количество снимков объекта и хранить их,
                    независимо от объекта, с которого делают снимок. Снимки часто используют не только
                    для реализации операции отмены, но и для транзакций, когда состояние объекта нужно «откатить»,
                    если операция не удалась.
            2) Когда прямое получение состояния объекта раскрывает приватные детали его реализации,
               нарушая инкапсуляцию.
               2.1) Паттерн предлагает изготовить снимок самому исходному объекту,
                    поскольку ему доступны все поля, даже приватные.

