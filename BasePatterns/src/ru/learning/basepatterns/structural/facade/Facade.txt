
           Паттерн "Фасад":
           Цель: Создать класс, который предоставляет простой интерфейс
                 к сложной системе классов, библиотеке или фреймворку.

           Реализация паттерна "Фасад":
            1) Определить, можно ли создать более простой интерфейс, чем тот,
               который предоставляет сложная подсистема.
               Все правильно, если этот интерфейс избавит клиента от необходимости знать о подробностях подсистемы.
            2) Создать класс фасада, реализующий этот интерфейс.
               Он должен переадресовывать вызовы клиента нужным объектам подсистемы.
               Фасад должен будет позаботиться о том, чтобы правильно инициализировать объекты подсистемы.
            3) Мы получим максимум пользы, если клиент будет работать только с фасадом.
               В этом случае изменения в подсистеме будут затрагивать только код фасада,
               а клиентский код останется рабочим.
            4) Если ответственность фасада начинает размываться,
               можно определить дополнительные фасады.

           Применимость:
            1) Когда нужно представить простой или урезанный интерфейс к сложной подсистеме.
               Подсистемы усложняются по мере развития программы. Применение большинства паттернов приводит
               к появлению меньших классов, но в большем количестве.
               Такую подсистему проще повторно использовать, настраивая её каждый раз под конкретные нужды,
               но вместе с тем, применять подсистему без настройки становится труднее.
               Фасад предлагает определённый вид системы по умолчанию, устраивающий большинство клиентов.
            2) Когда можно разложить подсистему на отдельные слои.
               Использовать фасады для определения точек входа на каждый уровень подсистемы.
               Если подсистемы зависят друг от друга, то зависимость можно упростить,
               разрешив подсистемам обмениваться информацией только через фасады.
